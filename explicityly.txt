If your code was not working properly when you did not
set the parameters explicitly for the MediaPipe Hands
class, it could be due to a few reasons related to how
default values function and how the MediaPipe library 
operates:

1. Default Parameter Values
When you create an instance of the Hands class without
explicitly setting parameters, it uses default values.
These defaults may not be suitable for your specific 
application or environment. For instance:

->The default max_num_hands is set to 2, which should
allow the detection of two hands, but if the processing
or the camera settings are not optimal, this might lead
to issues in detection.

->The default min_detection_confidence is 0.5, which 
means the model must be at least 50% confident to 
detect a hand. In scenarios with noise, poor lighting,
or low resolution, this might prevent hand detection 
altogether.

->The default min_tracking_confidence is also set to 
0.5, which might be too low for reliable tracking, 
especially during quick movements.

2. Inconsistencies with Input Data
The hand detection performance can heavily depend on 
the quality of the input data:

Camera Quality: If your webcam resolution is low or 
the camera is misconfigured, the model might struggle 
to detect hands effectively. Default parameters may 
not be optimized for low-quality inputs.

Lighting Conditions: If the environment is poorly lit 
or has high contrast, the default confidence thresholds 
may not work well, leading to detection failures.

3. Environmental Factors
In a cluttered or dynamic environment, the default 
settings might not perform adequately:

Background Complexity: If the background is busy, the 
model might be less confident about hand detection. It
might reject hand detections due to lower confidence, 
resulting in no hands being detected.

Motion: If hands are moving quickly, the default tracking
parameters might not be sufficient to maintain accurate 
tracking.

4. Hand Visibility
If your hands are partially occluded or not fully in 
the frame, the default settings may lead to missed 
detections. Explicitly setting parameters can allow for
more nuanced detection behavior based on your testing.

5. Library Changes
Sometimes, if you are using a newer version of the 
MediaPipe library, the default values for certain 
parameters may have changed, affecting how your code 
functions.

Conclusion
In summary, not explicitly setting parameters can lead 
to reliance on potentially inappropriate defaults for 
your specific application, resulting in issues like 
missed detections or unreliable tracking. By customizing 
these parameters, you can tailor the hand detection process 
to better fit your specific environment and use case, 
leading to more consistent and reliable performance. 
This is why, after adding explicit parameters, you 
observed improved functionality in your hand detection 
application.
